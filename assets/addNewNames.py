import yaml
import re

from updateLecturersAndSubjects import getDatabase 
from updateLecturersAndSubjects import printSubstep 

def handleWantToAddInput(item):
    printSubstep('-'*10)
    print('whant to add "' + item['name'] + '" in subjects database? [y/n]')
    print('occurre(s):')
    for url in item['url']:
        print(url)
    while True:
        ans = input()
        if ans == 'y' or ans == 'n':
            break
    return ans

def handleAliasesInput():
    print('list aliases, separated by comma:')
    aliases = getNewAliasesStr(input())
    print('Do you whant to add "' + aliases +'"? [y(es)/r(etry)/n(ot)]')

    while True:
        ans = input()
        if ans == 'y' or ans == 'n' or ans == 'r':
            break
    if ans == 'r': return handleAliasesInput()
    else: return {'ans': ans, 'aliases': aliases}

def getNewAliasesStr(rawStr):
    newAliasesStr = '|'
    for alias in rawStr.split(','):
        newAlias = alias.lower().strip()
        if newAlias != '':
            newAliasesStr += newAlias + '|'
    print(newAliasesStr)
    return newAliasesStr

def addNewNames(file):
    if getDatabase(file) == None:
        return
    for item in getDatabase(file):
        ans = handleWantToAddInput(item)
        if ans == 'n': continue
        ans = handleAliasesInput()
        if ans['ans'] == 'n': continue
        with open('../_data/subjects.yml', 'a') as f:
            print('- "' + ans['aliases'] + '"', file=f)
        printSubstep(' new aliases successfully added')

def main():
    addNewNames('../_data/autoGenerated/newSubjects.yml')
    addNewNames('../_data/autoGenerated/newLecturers.yml')

if __name__ == "__main__":
    main()

